name: Preservation Issue Comment Parser

on:
  issue_comment:
    types: created

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  execute:
    runs-on: ubuntu-latest
    if: ${{ !github.event.issue.pull_request && contains(github.event.issue.labels.*.name, 'preservation') && github.event.issue.assignee.name == github.event.comment.user.name }}
    steps:
      # TODO check for multiple open issues with 'attention' or 'failure' label
      # fail the job in those cases because of potential file system cruft

      - uses: actions/checkout@v4

      - name: Check for blocking issues
        run: |
          # exclude the current open 'attention' issue from the list of blockers
          blockers="$(gh issue list --search "label:attention,failure" --json number --jq 'del(.[] | select(.number == ${{ github.event.issue.number }})) | "- #\(.[].number)"')"
          if [ -n "$blockers" ]; then
            gh issue edit ${{ github.event.issue.number }} \
              --add-label "failure" \
              --title "Open Issues Blocking Preservation Workflow"
            COMMENT_BODY=$(echo -e "This issue and the following issues must be closed before the preservation workflow can run:\n\n${blockers}")
            gh issue comment ${{ github.event.issue.number }} --body "$COMMENT_BODY"
            gh issue edit ${{ github.event.issue.number }} --add-assignee ${{ github.actor }}
            exit 1
          fi

      - name: Run execution code
        id: script
        # read the body of the comment for substring "ok"
        if: contains(github.event.comment.body, 'ok')
        run: |
          echo "run execution" &>> ${RUNNER_TEMP}/execution.log
          echo "python ${HOME}/${GITHUB_REPOSITORY}/s3.py &>> ${RUNNER_TEMP}/execution.log" &>> ${RUNNER_TEMP}/execution.log

      - name: Close issue with canceled label
        # read the body of the comment for anything other than substring "ok"
        if: ${{ !contains(github.event.comment.body, 'ok') }}
        run: |
          gh issue edit ${{ github.event.issue.number }} \
            --remove-label "attention" \
            --add-label "canceled" \
            --title "Canceled Preservation Workflow" \
            --remove-assignee ${{ github.actor }}
          gh issue close ${{ github.event.issue.number }}

      - name: Comment with success output
        if: always() && steps.script.outcome == 'success'
        run: |
          gh issue edit ${{ github.event.issue.number }} \
            --remove-label "attention" \
            --title "Executed Preservation Workflow"
          LOG=$(cat "${RUNNER_TEMP}/execution.log")
          CODEBLOCK_FENCE='```'
          CODEBLOCK=$(echo -e "$CODEBLOCK_FENCE\n$LOG\n$CODEBLOCK_FENCE")
          gh issue close ${{ github.event.issue.number }} --comment "$CODEBLOCK"

      - name: Comment with failure output
        if: always() && steps.script.outcome != 'success' && steps.script.outcome != 'skipped'
        run: |
          gh issue edit ${{ github.event.issue.number }} \
            --add-label "failure" \
            --title "Failed Execution for Preservation Workflow"
          LOG=$(cat "${RUNNER_TEMP}/validate.log")
          CODEBLOCK_FENCE='```'
          CODEBLOCK=$(echo -e "$CODEBLOCK_FENCE\n$LOG\n$CODEBLOCK_FENCE")
          gh issue comment ${{ github.event.issue.number }} --body "$CODEBLOCK"
          gh issue edit ${{ github.event.issue.number }} --add-assignee ${{ vars.DEVELOPER }}
