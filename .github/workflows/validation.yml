name: Preservation Issue Parser

on:
  issues:
    types: opened

jobs:
  validate:
    runs-on: ubuntu-latest
    if: ${{ !github.event.issue.pull_request && contains(github.event.issue.labels.*.name, 'preservation') }}
    steps:
      - uses: actions/checkout@v4

      - id: issues
        run: |
          # msg=''
          # attention_count="$(gh issue list --label 'attention' --json url --jq length)"
          # if [ "$attention_count" -gt 0 ]; then
          #   msg="${msg}${attention_count} open 'attention' issue"
          #   if [ "$attention_count" -gt 1 ]; then
          #     msg="${msg}s"
          #   fi
          # fi
          # failure_count="$(gh issue list --label 'failure' --json url --jq length)"
          # if [ "$failure_count" -gt 0 ]; then
          #   if [ "$attention_count" -gt 0 ]; then
          #     msg="${msg} and "
          #   fi
          #   msg="${msg}${failure_count} open 'failure' issue"
          #   if [ "$failure_count" -gt 1 ]; then
          #     msg="${msg}s"
          #   fi
          # fi
          # if [ "$attention_count" -gt 0 ] || [ "$failure_count" -gt 0 ]; then
          #   gh issue edit ${{ github.event.issue.number }} \
          #     --add-label "failure" \
          #     --title "Open Issues Blocking Preservation Workflow"
          #   COMMENT_BODY=$(echo -e "The following issues must be closed before the preservation workflow can run: ")
          #   gh issue comment ${{ github.event.issue.number }} --body "$COMMENT_BODY"
          #   gh issue edit ${{ github.event.issue.number }} --add-assignee ${{ github.actor }}
          #   exit "$msg"
          # fi
          blocking_issues="$(gh issue list --label 'attention' --json number)"
          echo "blocking issues: $blocking_issues"
          no_issues="$(gh issue list --label 'bug' --json number)"
          echo "no issues: $no_issues"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - id: script
        run: |
          echo "run validation" &>> ${RUNNER_TEMP}/validation.log
          echo "python ${HOME}/${GITHUB_REPOSITORY}/s3.py &>> ${RUNNER_TEMP}/validation.log" &>> ${RUNNER_TEMP}/validation.log
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - id: success
        if: always() && steps.script.outcome == 'success'
        run: |
          gh issue edit ${{ github.event.issue.number }} \
            --add-label "attention" \
            --title "Review Validation for Preservation Workflow"
          LOG=$(cat "${RUNNER_TEMP}/validation.log")
          CODEBLOCK_FENCE='```'
          CODEBLOCK=$(echo -e "$CODEBLOCK_FENCE\n$LOG\n$CODEBLOCK_FENCE")
          COMMENT_BODY=$(echo -e "$CODEBLOCK\nReply with a new comment containing the text **OK** to approve the validation results and continue the workflow execution.")
          gh issue comment ${{ github.event.issue.number }} --body "$COMMENT_BODY"
          gh issue edit ${{ github.event.issue.number }} --add-assignee ${{ github.actor }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - id: failure
        if: always() && steps.script.outcome != 'success'
        run: |
          gh issue edit ${{ github.event.issue.number }} \
            --add-label "failure" \
            --title "Failed Validation for Preservation Workflow"
          LOG=$(cat "${RUNNER_TEMP}/validate.log")
          CODEBLOCK_FENCE='```'
          CODEBLOCK=$(echo -e "$CODEBLOCK_FENCE\n$LOG\n$CODEBLOCK_FENCE")
          gh issue comment ${{ github.event.issue.number }} --body "$CODEBLOCK"
          gh issue edit ${{ github.event.issue.number }} --add-assignee ${{ vars.DEVELOPER }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
